--
-- PostgreSQL database dump
--

-- Dumped from database version 14.4
-- Dumped by pg_dump version 14.4

-- Started on 2022-10-25 22:22:35

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- TOC entry 235 (class 1255 OID 16511)
-- Name: add_doc_type(text, text); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.add_doc_type(IN _title text, IN _linktoshablon text)
    LANGUAGE plpgsql
    AS $$
declare
	exist integer;
begin
	select count(*)
	into exist
	from doc_types
	where title = _title;
	
	if exist > 0 then
		raise exception 'Этот тип документа уже существует';
	else
		insert into doc_types (title, "linkToShablon") values (_title, _linkToShablon);
	end if;
end;
$$;


ALTER PROCEDURE public.add_doc_type(IN _title text, IN _linktoshablon text) OWNER TO postgres;

--
-- TOC entry 245 (class 1255 OID 16512)
-- Name: add_job(text); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.add_job(IN _title text)
    LANGUAGE plpgsql
    AS $$
declare
	exist integer;
begin
	select count(*)
	into exist
	from jobs
	where title = _title;
	
	if exist > 0 then
		raise exception 'Эта должность уже существует';
	else
		insert into jobs (title) values (_title);
	end if;
end;
$$;


ALTER PROCEDURE public.add_job(IN _title text) OWNER TO postgres;

--
-- TOC entry 253 (class 1255 OID 16577)
-- Name: add_periodicity(text, text[]); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.add_periodicity(IN _title text, IN _dates text[])
    LANGUAGE plpgsql
    AS $$
declare
	dateDate date[];
	exist integer;
begin
	
	-- переводим массив строк в массив дат
	for i in 1..array_length(_dates, 1) loop
		begin
			dateDate[i] = to_date(_dates[i], 'DD.MM.YYYY');
		exception
			when datetime_field_overflow then
				raise exception 'Неправильный формат ввода даты';
				return;
		end;
	end loop;
	
	-- проверка уникальности создаваемой записи
	-- по крайней мере по названию периодичности
	select count(*)
	into exist
	from periodicity
	where "title" = _title;
	
	if exist > 0 then
		raise exception 'Такая периодичность уже существует';
	else
		insert into periodicity ("title", "dates") values (_title, dateDate);
	end if;
	
end;
$$;


ALTER PROCEDURE public.add_periodicity(IN _title text, IN _dates text[]) OWNER TO postgres;

--
-- TOC entry 258 (class 1255 OID 25165)
-- Name: add_schedule(integer, integer, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.add_schedule(IN _doctype integer, IN _jobofresponsible integer, IN _period integer)
    LANGUAGE plpgsql
    AS $$
declare
	exist integer;
	existDocType integer;
	existJob integer;
	existPeriodicity integer;
	last_id integer;
	items record;
begin

	--проверка уникальности создаваемой записи
	select count (*)
	into exist
	from schedule
	where "docType" = _docType and "jobOfResponsible" = _jobOfResponsible and "period" = _period;
	
	--проверка существования типа документа
	select count (*)
	into existDocType
	from doc_types
	where id = _docType;
	
	--проверка существования должности
	select count (*)
	into existJob
	from jobs
	where id = _jobOfResponsible;
	
	--проверка существования периодичности
	select count (*)
	into existPeriodicity
	from periodicity
	where id = _period;
	
	if exist > 0 then
		raise exception 'Такой пункт в расписании уже существует';
	elseif existDocType = 0 then
		raise exception 'Такого типа документа не существует';
	elseif existJob = 0 then
		raise exception 'Такой должности не существует';
	elseif existPeriodicity = 0 then
		raise exception 'Такой периодичности не существует';
	else
		insert into schedule ("docType", "jobOfResponsible", "period") values (_docType, _jobOfResponsible, _period) returning id into last_id;
	end if;
	
	-- вставляем данные и в факт доки
	drop table if exists temp1;
	create temp table temp1 as
	select
		workers."id" as "workerId",
		schedule."id" as "reason",
		workers."fullName",
		schedule."period"
	from schedule
	cross join workers
	where
		schedule."jobOfResponsible" = workers."job" and
		schedule."id" = last_id;
		
	drop table if exists temp2;
	create temp table temp2 as
	select
		temp1."workerId",
		temp1."reason",
		periodicity."dates"
	from temp1
	inner join periodicity
	on temp1."period" = periodicity."id";

	drop table if exists temp3;
	create temp table temp3 as
	select *
	from temp2
	cross join unnest(dates) as "dateToPass";

	insert into fact_docs("worker", "reason", "dateToPass", "isRelevant")
	select
		"workerId",
		"reason",
		get_year("dateToPass"),
		true
	from temp3;
		
	
end;
$$;


ALTER PROCEDURE public.add_schedule(IN _doctype integer, IN _jobofresponsible integer, IN _period integer) OWNER TO postgres;

--
-- TOC entry 244 (class 1255 OID 16516)
-- Name: add_worker(text, integer, boolean); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.add_worker(IN _fullname text, IN _job integer, IN _isclassroomteacher boolean)
    LANGUAGE plpgsql
    AS $$
declare
	exist integer;
begin
	select count (*)
	into exist
	from jobs
	where id = _job;
	
	if exist = 0 then
		raise exception 'Такой должности не существует';
	else
		insert into workers ("fullName", job, "isClassroomTeacher") values (_fullName, _job, _isClassroomTeacher);
	end if;
end;
$$;


ALTER PROCEDURE public.add_worker(IN _fullname text, IN _job integer, IN _isclassroomteacher boolean) OWNER TO postgres;

--
-- TOC entry 262 (class 1255 OID 25427)
-- Name: del_doc_type(integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.del_doc_type(IN _id integer)
    LANGUAGE plpgsql
    AS $$
declare
	idExist integer;
begin
	select count (*)
	from doc_types
	where id = _id
	into idExist;
	
	if idExist = 0 then
		raise exception 'Такого типа документа не существует';
	else
		delete from doc_types
		where id = _id;
	end if;
end;
$$;


ALTER PROCEDURE public.del_doc_type(IN _id integer) OWNER TO postgres;

--
-- TOC entry 247 (class 1255 OID 25433)
-- Name: del_job(integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.del_job(IN _id integer)
    LANGUAGE plpgsql
    AS $$
declare
	idExist integer;
begin
	select count (*)
	from jobs
	where id = _id
	into idExist;
	
	if idExist = 0 then
		raise exception 'Такой должности не существует';
	else
		delete from jobs
		where id = _id;
	end if;
end;
$$;


ALTER PROCEDURE public.del_job(IN _id integer) OWNER TO postgres;

--
-- TOC entry 248 (class 1255 OID 25435)
-- Name: del_periodicity(integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.del_periodicity(IN _id integer)
    LANGUAGE plpgsql
    AS $$
declare
	idExist integer;
begin
	select count (*)
	from periodicity
	where id = _id
	into idExist;
	
	if idExist = 0 then
		raise exception 'Такой периодичности не существует';
	else
		delete from periodicity
		where id = _id;
	end if;
end;
$$;


ALTER PROCEDURE public.del_periodicity(IN _id integer) OWNER TO postgres;

--
-- TOC entry 251 (class 1255 OID 25472)
-- Name: del_schedule(integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.del_schedule(IN _id integer)
    LANGUAGE plpgsql
    AS $$
declare
	idExist integer;
	last_id integer;
begin
	-- проверка существования IDшника
	select count (*)
	into idExist
	from schedule
	where id = _id;
	
	if idExist = 0 then
		raise exception 'Такого пункта в расписании не существует';
	else
		delete from schedule
		where id = _id
		returning id into last_id;
	end if;
	
	-- в факт доках
	-- все документы, у которых reason = last_id делаем неактуальными
	update fact_docs
	set "isRelevant" = false
	where reason = last_id;
end;
$$;


ALTER PROCEDURE public.del_schedule(IN _id integer) OWNER TO postgres;

--
-- TOC entry 249 (class 1255 OID 25439)
-- Name: del_worker(integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.del_worker(IN _id integer)
    LANGUAGE plpgsql
    AS $$
declare
	idExist integer;
begin
	select count (*)
	from worker
	where id = _id
	into idExist;
	
	if idExist = 0 then
		raise exception 'Такого работника не существует';
	else
		delete from worker
		where id = _id;
	end if;
end;
$$;


ALTER PROCEDURE public.del_worker(IN _id integer) OWNER TO postgres;

--
-- TOC entry 254 (class 1255 OID 25482)
-- Name: get_doc_types(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_doc_types() RETURNS TABLE(id integer, title text, linktoshablon text)
    LANGUAGE plpgsql
    AS $$
begin
	return query
		select * 
		from doc_types;
end;
$$;


ALTER FUNCTION public.get_doc_types() OWNER TO postgres;

--
-- TOC entry 264 (class 1255 OID 25667)
-- Name: get_fact_docs(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_fact_docs() RETURNS TABLE(id integer, "workerId" integer, "fullName" text, job integer, "jobTitle" text, "docType" integer, "docTypeTitle" text, "linkToFile" text, "dateToPass" date, "dateOfPass" date, "isRelevant" boolean)
    LANGUAGE plpgsql
    AS $$
begin
	drop table if exists temp1;
	create table temp1 as
		select * from fact_docs;

	drop table if exists temp2;
	create table temp2 as
	select
		fact_docs."id",
		fact_docs."worker",
		workers."fullName",
		workers."job",
		schedule."docType",
		fact_docs."linkToFile",
		fact_docs."dateToPass",
		fact_docs."dateOfPass",
		fact_docs."isRelevant"
	from fact_docs
	join workers
	on fact_docs."worker" = workers."id"
	join schedule
	on fact_docs."reason" = schedule."id";

	drop table if exists temp3;
	create table temp3 as
	select
		temp2."id",
		temp2."worker",
		temp2."fullName",
		temp2."job",
		jobs."title" as "jobTitle",
		temp2."docType",
		doc_types."title" as docTypeTitle,
		temp2."linkToFile",
		temp2."dateToPass",
		temp2."dateOfPass",
		temp2."isRelevant"
	from temp2
	join jobs
	on temp2."job" = jobs."id"
	join doc_types
	on temp2."docType" = doc_types."id";
	
	return query
		select * from temp3;
end;
$$;


ALTER FUNCTION public.get_fact_docs() OWNER TO postgres;

--
-- TOC entry 265 (class 1255 OID 25733)
-- Name: get_fact_docs_by_worker(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_fact_docs_by_worker(workerid integer) RETURNS TABLE(id integer, "workerId" integer, "fullName" text, job integer, "jobTitle" text, "docType" integer, "docTypeTitle" text, "linkToFile" text, "dateToPass" date, "dateOfPass" date, "isRelevant" boolean)
    LANGUAGE plpgsql
    AS $$
begin
	drop table if exists temp1;
	create table temp1 as
		select * from fact_docs;

	drop table if exists temp2;
	create table temp2 as
	select
		fact_docs."id",
		fact_docs."worker",
		workers."fullName",
		workers."job",
		schedule."docType",
		fact_docs."linkToFile",
		fact_docs."dateToPass",
		fact_docs."dateOfPass",
		fact_docs."isRelevant"
	from fact_docs
	join workers
	on fact_docs."worker" = workers."id"
	join schedule
	on fact_docs."reason" = schedule."id";

	drop table if exists temp3;
	create table temp3 as
	select
		temp2."id",
		temp2."worker",
		temp2."fullName",
		temp2."job",
		jobs."title" as "jobTitle",
		temp2."docType",
		doc_types."title" as docTypeTitle,
		temp2."linkToFile",
		temp2."dateToPass",
		temp2."dateOfPass",
		temp2."isRelevant"
	from temp2
	join jobs
	on temp2."job" = jobs."id"
	join doc_types
	on temp2."docType" = doc_types."id"
	where workerId = temp2."worker";
	
	return query
		select * from temp3;
end;
$$;


ALTER FUNCTION public.get_fact_docs_by_worker(workerid integer) OWNER TO postgres;

--
-- TOC entry 255 (class 1255 OID 25483)
-- Name: get_jobs(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_jobs() RETURNS TABLE(id integer, title text)
    LANGUAGE plpgsql
    AS $$
begin
	return query
		select * 
		from jobs;
end;
$$;


ALTER FUNCTION public.get_jobs() OWNER TO postgres;

--
-- TOC entry 256 (class 1255 OID 25484)
-- Name: get_periodicities(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_periodicities() RETURNS TABLE(id integer, title text, dates date[])
    LANGUAGE plpgsql
    AS $$
begin
	return query
		select * 
		from periodicity;
end;
$$;


ALTER FUNCTION public.get_periodicities() OWNER TO postgres;

--
-- TOC entry 252 (class 1255 OID 25542)
-- Name: get_schedule(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_schedule() RETURNS TABLE(id integer, "docTypeId" integer, "docType" text, "jobOfResponsibleId" integer, "jobOfResponsible" text, "periodId" integer, period text)
    LANGUAGE plpgsql
    AS $$
begin
	return query
		select
			schedule."id",
			schedule."docType" as "docTypeId",
			doc_types."title" as "docType",
			schedule."jobOfResponsible" as "jobOfResponsibleId",
			jobs."title" as "jobOfResponsible",
			schedule."period" as "periodId",
			periodicity."title" as "period"
		from schedule
		join doc_types
		on schedule."docType" = doc_types."id"
		join jobs
		on schedule."jobOfResponsible" = jobs."id"
		join periodicity
		on schedule."period" = periodicity."id";
end;
$$;


ALTER FUNCTION public.get_schedule() OWNER TO postgres;

--
-- TOC entry 250 (class 1255 OID 25491)
-- Name: get_workers(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_workers() RETURNS TABLE(id integer, "fullName" text, "jobId" integer, job text, "isClassroomTeacher" boolean)
    LANGUAGE plpgsql
    AS $$
begin
	return query
		select
			workers."id", 
			workers."fullName", 
			workers."job" as "jobId", 
			jobs."title", 
			workers."isClassroomTeacher"
		from workers
		join jobs
		on workers."job" = jobs."id";
end;
$$;


ALTER FUNCTION public.get_workers() OWNER TO postgres;

--
-- TOC entry 257 (class 1255 OID 24924)
-- Name: get_year(date); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_year(null_date date) RETURNS date
    LANGUAGE plpgsql
    AS $$
declare
	my_interval interval;
begin
	-- 07 июль - месяц перезагрузки
	
	my_interval = age(current_date, null_date);
	
	-- текущая дата до НГ
	-- входящая дата до НГ
	if to_char(current_date, 'MM-DD') > '07-31' and to_char(null_date, 'MM-DD') > '07-31' then
		if to_char(current_date, 'MM-DD') < to_char(null_date, 'MM-DD') then
			return null_date + interval '1 year' * (extract(year from my_interval) + 1);
		else
			return null_date + interval '1 year' * extract(year from my_interval);
		end if;
	-- текущая дата после НГ
	-- входящая дата после НГ	
	elsif to_char(current_date, 'MM-DD') < '07-01' and to_char(null_date, 'MM-DD') < '07-01' then
		if to_char(current_date, 'MM-DD') < to_char(null_date, 'MM-DD') then
			return null_date + interval '1 year' * (extract(year from my_interval) + 1);
		else
			return null_date + interval '1 year' * extract(year from my_interval);
		end if;
	-- текущая дата до НГ
	-- входящая дата после НГ	
	elsif to_char(current_date, 'MM-DD') > '07-01' and to_char(null_date, 'MM-DD') < '07-01' then
		return null_date + interval '1 year' * (extract(year from my_interval) + 1);
	-- текущая дата после НГ
	-- входящая дата до НГ	
	elsif to_char(current_date, 'MM-DD') < '07-01' and to_char(null_date, 'MM-DD') > '07-01' then
		return null_date + interval '1 year' * extract(year from my_interval);
	end if;
	
end;
$$;


ALTER FUNCTION public.get_year(null_date date) OWNER TO postgres;

--
-- TOC entry 259 (class 1255 OID 25402)
-- Name: update_doc_type(integer, text, text); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.update_doc_type(IN _id integer, IN _title text, IN _linktoshablon text)
    LANGUAGE plpgsql
    AS $$
declare
	idExist integer;
	simExist integer;
begin
	select count(*)
	into idExist
	from doc_types
	where id = _id;
	
	select count(*)
	into simExist
	from doc_types
	where title = _title;
	
	if idExist = 0 then
		raise exception 'Такого типа документа не существует';
	elsif simExist > 0 then
		raise exception 'Тип документа с таким названием уже существует';
	else
		update doc_types
		set 
			"title" = _title,
			"linkToShablon" = _linkToShablon
		where id = _id;
	end if;
end;
$$;


ALTER PROCEDURE public.update_doc_type(IN _id integer, IN _title text, IN _linktoshablon text) OWNER TO postgres;

--
-- TOC entry 260 (class 1255 OID 25409)
-- Name: update_job(integer, text); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.update_job(IN _id integer, IN _title text)
    LANGUAGE plpgsql
    AS $$
declare
	idExist integer;
	simExist integer;
begin
	select count(*)
	into idExist
	from jobs
	where id = _id;
	
	select count(*)
	into simExist
	from jobs
	where title = _title and id <> _id;
	
	if idExist = 0 then
		raise exception 'Такой должности не существует';
	elsif simExist > 0 then
		raise exception 'Такая должность уже существует';
	else
		update jobs
		set 
			"title" = _title
		where id = _id;
	end if;
end;
$$;


ALTER PROCEDURE public.update_job(IN _id integer, IN _title text) OWNER TO postgres;

--
-- TOC entry 261 (class 1255 OID 25417)
-- Name: update_periodicity(integer, text, text[]); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.update_periodicity(IN _id integer, IN _title text, IN _dates text[])
    LANGUAGE plpgsql
    AS $$
declare
	dateDate date[];
	idExist integer;
	simExist integer;
begin
	
	-- переводим массив строк в массив дат
	for i in 1..array_length(_dates, 1) loop
		begin
			dateDate[i] = to_date(_dates[i], 'DD.MM.YYYY');
		exception
			when datetime_field_overflow then
				raise exception 'Неправильный формат ввода даты';
				return;
		end;
	end loop;
	
	select count(*)
	into idExist
	from periodicity
	where "id" = _id;
	
	select count(*)
	into simExist
	from periodicity
	where ("title" = _title or "dates" = dateDate) and id <> _id;
	
	if idExist = 0 then
		raise exception 'Такой периодичности не существует';
	elsif simExist <> 0 then
		raise exception 'Периодичность с таким названием или датами уже существует';
	else
		update periodicity
		set
			"title" = _title,
			"dates" = dateDate
		where id = _id;
	end if;
end;
$$;


ALTER PROCEDURE public.update_periodicity(IN _id integer, IN _title text, IN _dates text[]) OWNER TO postgres;

--
-- TOC entry 263 (class 1255 OID 25419)
-- Name: update_schedule(integer, integer, integer, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.update_schedule(IN _id integer, IN _doctype integer, IN _jobofresponsible integer, IN _period integer)
    LANGUAGE plpgsql
    AS $$
declare
	idExist integer;
	simExist integer;
	existDocType integer;
	existJob integer;
	existPeriodicity integer;
	last_id integer;
begin

	-- проверка существования IDшника
	select count (*)
	into idExist
	from schedule
	where id = _id;
	
	-- проверка уникальности создаваемой записи
	select count (*)
	into simExist
	from schedule
	where "docType" = _docType and "jobOfResponsible" = _jobOfResponsible and "period" = _period;
	
	-- проверка существования типа документа
	select count (*)
	into existDocType
	from doc_types
	where id = _docType;
	
	-- проверка существования должности
	select count (*)
	into existJob
	from jobs
	where id = _jobOfResponsible;
	
	-- проверка существования периодичности
	select count (*)
	into existPeriodicity
	from periodicity
	where id = _period;
	
	if idExist = 0 then
		raise exception 'Такого пункта в расписании не существует';
	elseif simExist <> 0 then
		raise exception 'В расписании уже существует этот пункт';
	elseif existDocType = 0 then
		raise exception 'Такого типа документа не существует';
	elseif existJob = 0 then
		raise exception 'Такой должности не существует';
	elseif existPeriodicity = 0 then
		raise exception 'Такой периодичности не существует';
	else
		update schedule
		set
			"docType" = _docType,
			"jobOfResponsible" = _jobOfResponsible,
			"period" = _period
		where id = _id
		returning id into last_id;
	end if;
	
	-- что происходит в факт доках
	-- все документы, у которых reason = last_id делаем неактуальными
	update fact_docs
	set "isRelevant" = false
	where reason = last_id;
	
	-- создаём новую пачку документов (уже актуальных)
	drop table if exists temp1;
	create temp table temp1 as
	select
		workers."id" as "workerId",
		schedule."id" as "reason",
		workers."fullName",
		schedule."period"
	from schedule
	cross join workers
	where
		schedule."jobOfResponsible" = workers."job" and
		schedule."id" = last_id;
		
	drop table if exists temp2;
	create temp table temp2 as
	select
		temp1."workerId",
		temp1."reason",
		periodicity."dates"
	from temp1
	inner join periodicity
	on temp1."period" = periodicity."id";

	drop table if exists temp3;
	create temp table temp3 as
	select *
	from temp2
	cross join unnest(dates) as "dateToPass";

	insert into fact_docs("worker", "reason", "dateToPass", "isRelevant")
	select
		"workerId",
		"reason",
		get_year("dateToPass"),
		true
	from temp3;
	
end;
$$;


ALTER PROCEDURE public.update_schedule(IN _id integer, IN _doctype integer, IN _jobofresponsible integer, IN _period integer) OWNER TO postgres;

--
-- TOC entry 246 (class 1255 OID 25411)
-- Name: update_worker(integer, text, integer, boolean); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.update_worker(IN _id integer, IN _fullname text, IN _job integer, IN _isclassroomteacher boolean)
    LANGUAGE plpgsql
    AS $$
declare
	idExist integer;
begin
	select count(*)
	into idExist
	from workers
	where id = _id;
	
	if idExist = 0 then
		raise exception 'Такого работника не существует';
	else
		update workers
		set
			"fullName" = _fullname,
			"job" = _job,
			"isClassroomTeacher" = _isclassroomteacher
		where id = _id;
	end if;
end;
$$;


ALTER PROCEDURE public.update_worker(IN _id integer, IN _fullname text, IN _job integer, IN _isclassroomteacher boolean) OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- TOC entry 218 (class 1259 OID 16412)
-- Name: doc_types; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.doc_types (
    id integer NOT NULL,
    title text NOT NULL,
    "linkToShablon" text
);


ALTER TABLE public.doc_types OWNER TO postgres;

--
-- TOC entry 217 (class 1259 OID 16411)
-- Name: doc_types_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.doc_types ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.doc_types_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 226 (class 1259 OID 16471)
-- Name: fact_docs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.fact_docs (
    id integer NOT NULL,
    worker integer NOT NULL,
    reason integer,
    "linkToFile" text,
    "dateToPass" date NOT NULL,
    "dateOfPass" date,
    "isRelevant" boolean
);


ALTER TABLE public.fact_docs OWNER TO postgres;

--
-- TOC entry 225 (class 1259 OID 16470)
-- Name: fact_docs_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.fact_docs ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.fact_docs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 219 (class 1259 OID 16419)
-- Name: jobs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.jobs (
    id integer NOT NULL,
    title text NOT NULL
);


ALTER TABLE public.jobs OWNER TO postgres;

--
-- TOC entry 220 (class 1259 OID 16426)
-- Name: jobs_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.jobs ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.jobs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 228 (class 1259 OID 16567)
-- Name: periodicity; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.periodicity (
    id integer NOT NULL,
    title text NOT NULL,
    dates date[] NOT NULL
);


ALTER TABLE public.periodicity OWNER TO postgres;

--
-- TOC entry 227 (class 1259 OID 16566)
-- Name: periodicity_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.periodicity ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.periodicity_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 224 (class 1259 OID 16445)
-- Name: schedule; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.schedule (
    id integer NOT NULL,
    "docType" integer,
    "jobOfResponsible" integer,
    period integer NOT NULL
);


ALTER TABLE public.schedule OWNER TO postgres;

--
-- TOC entry 223 (class 1259 OID 16444)
-- Name: schedule_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.schedule ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.schedule_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 229 (class 1259 OID 25734)
-- Name: temp1; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.temp1 (
    id integer,
    worker integer,
    reason integer,
    "linkToFile" text,
    "dateToPass" date,
    "dateOfPass" date,
    "isRelevant" boolean
);


ALTER TABLE public.temp1 OWNER TO postgres;

--
-- TOC entry 230 (class 1259 OID 25739)
-- Name: temp2; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.temp2 (
    id integer,
    worker integer,
    "fullName" text,
    job integer,
    "docType" integer,
    "linkToFile" text,
    "dateToPass" date,
    "dateOfPass" date,
    "isRelevant" boolean
);


ALTER TABLE public.temp2 OWNER TO postgres;

--
-- TOC entry 231 (class 1259 OID 25744)
-- Name: temp3; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.temp3 (
    id integer,
    worker integer,
    "fullName" text,
    job integer,
    "jobTitle" text,
    "docType" integer,
    doctypetitle text,
    "linkToFile" text,
    "dateToPass" date,
    "dateOfPass" date,
    "isRelevant" boolean
);


ALTER TABLE public.temp3 OWNER TO postgres;

--
-- TOC entry 222 (class 1259 OID 16432)
-- Name: workers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.workers (
    id integer NOT NULL,
    "fullName" text,
    job integer,
    "isClassroomTeacher" boolean NOT NULL
);


ALTER TABLE public.workers OWNER TO postgres;

--
-- TOC entry 221 (class 1259 OID 16431)
-- Name: workers_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.workers ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.workers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 3399 (class 0 OID 16412)
-- Dependencies: 218
-- Data for Name: doc_types; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.doc_types (id, title, "linkToShablon") FROM stdin;
1	Отчёт о воспитательной работе	\N
3	Отчёт по питанию	\N
4	Отчёт по классу	\N
5	Анализ контрольных работ	\N
6	Анализ терминологических диктантов	\N
7	Анализ по предметам	\N
8	Отчёт о посещаемости	\N
9	Инструкция для учителей	\N
10	Инструкция для учащихся	\N
11	Отчёты в КДН	\N
12	Отчёты в ПДН	\N
13	Анализ психологического тестирования учащихся	\N
14	Программа обуения	\N
15	Анализ годовой работы	\N
16	Отчёт по инвентаризации	\N
2	Отчёт по предмету	some
\.


--
-- TOC entry 3407 (class 0 OID 16471)
-- Dependencies: 226
-- Data for Name: fact_docs; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.fact_docs (id, worker, reason, "linkToFile", "dateToPass", "dateOfPass", "isRelevant") FROM stdin;
82	1	39	\N	2022-10-27	\N	t
83	1	39	\N	2022-12-22	\N	t
84	1	39	\N	2023-03-23	\N	t
85	1	39	\N	2023-05-31	\N	t
86	2	39	\N	2022-10-27	\N	t
87	2	39	\N	2022-12-22	\N	t
88	2	39	\N	2023-03-23	\N	t
89	2	39	\N	2023-05-31	\N	t
90	3	39	\N	2022-10-27	\N	t
91	3	39	\N	2022-12-22	\N	t
92	3	39	\N	2023-03-23	\N	t
93	3	39	\N	2023-05-31	\N	t
94	4	39	\N	2022-10-27	\N	t
95	4	39	\N	2022-12-22	\N	t
96	4	39	\N	2023-03-23	\N	t
97	4	39	\N	2023-05-31	\N	t
98	5	39	\N	2022-10-27	\N	t
99	5	39	\N	2022-12-22	\N	t
100	5	39	\N	2023-03-23	\N	t
101	5	39	\N	2023-05-31	\N	t
102	6	39	\N	2022-10-27	\N	t
103	6	39	\N	2022-12-22	\N	t
104	6	39	\N	2023-03-23	\N	t
105	6	39	\N	2023-05-31	\N	t
106	7	39	\N	2022-10-27	\N	t
107	7	39	\N	2022-12-22	\N	t
108	7	39	\N	2023-03-23	\N	t
109	7	39	\N	2023-05-31	\N	t
110	8	39	\N	2022-10-27	\N	t
111	8	39	\N	2022-12-22	\N	t
112	8	39	\N	2023-03-23	\N	t
113	8	39	\N	2023-05-31	\N	t
114	9	39	\N	2022-10-27	\N	t
115	9	39	\N	2022-12-22	\N	t
116	9	39	\N	2023-03-23	\N	t
117	9	39	\N	2023-05-31	\N	t
118	1	40	\N	2022-10-27	\N	t
119	1	40	\N	2022-12-22	\N	t
120	1	40	\N	2023-03-23	\N	t
121	1	40	\N	2023-05-31	\N	t
122	2	40	\N	2022-10-27	\N	t
123	2	40	\N	2022-12-22	\N	t
124	2	40	\N	2023-03-23	\N	t
125	2	40	\N	2023-05-31	\N	t
126	3	40	\N	2022-10-27	\N	t
127	3	40	\N	2022-12-22	\N	t
128	3	40	\N	2023-03-23	\N	t
129	3	40	\N	2023-05-31	\N	t
130	4	40	\N	2022-10-27	\N	t
131	4	40	\N	2022-12-22	\N	t
132	4	40	\N	2023-03-23	\N	t
133	4	40	\N	2023-05-31	\N	t
134	5	40	\N	2022-10-27	\N	t
135	5	40	\N	2022-12-22	\N	t
136	5	40	\N	2023-03-23	\N	t
137	5	40	\N	2023-05-31	\N	t
138	6	40	\N	2022-10-27	\N	t
139	6	40	\N	2022-12-22	\N	t
140	6	40	\N	2023-03-23	\N	t
141	6	40	\N	2023-05-31	\N	t
142	7	40	\N	2022-10-27	\N	t
143	7	40	\N	2022-12-22	\N	t
144	7	40	\N	2023-03-23	\N	t
145	7	40	\N	2023-05-31	\N	t
146	8	40	\N	2022-10-27	\N	t
147	8	40	\N	2022-12-22	\N	t
148	8	40	\N	2023-03-23	\N	t
149	8	40	\N	2023-05-31	\N	t
150	9	40	\N	2022-10-27	\N	t
151	9	40	\N	2022-12-22	\N	t
152	9	40	\N	2023-03-23	\N	t
153	9	40	\N	2023-05-31	\N	t
154	1	41	\N	2022-09-30	\N	t
155	1	41	\N	2022-10-31	\N	t
156	1	41	\N	2022-11-30	\N	t
157	1	41	\N	2022-12-31	\N	t
158	1	41	\N	2023-01-31	\N	t
159	1	41	\N	2023-02-28	\N	t
160	1	41	\N	2023-03-31	\N	t
161	1	41	\N	2023-04-30	\N	t
162	1	41	\N	2023-05-31	\N	t
163	2	41	\N	2022-09-30	\N	t
164	2	41	\N	2022-10-31	\N	t
165	2	41	\N	2022-11-30	\N	t
166	2	41	\N	2022-12-31	\N	t
167	2	41	\N	2023-01-31	\N	t
168	2	41	\N	2023-02-28	\N	t
169	2	41	\N	2023-03-31	\N	t
170	2	41	\N	2023-04-30	\N	t
171	2	41	\N	2023-05-31	\N	t
172	3	41	\N	2022-09-30	\N	t
173	3	41	\N	2022-10-31	\N	t
174	3	41	\N	2022-11-30	\N	t
175	3	41	\N	2022-12-31	\N	t
176	3	41	\N	2023-01-31	\N	t
177	3	41	\N	2023-02-28	\N	t
178	3	41	\N	2023-03-31	\N	t
179	3	41	\N	2023-04-30	\N	t
180	3	41	\N	2023-05-31	\N	t
181	4	41	\N	2022-09-30	\N	t
182	4	41	\N	2022-10-31	\N	t
183	4	41	\N	2022-11-30	\N	t
184	4	41	\N	2022-12-31	\N	t
185	4	41	\N	2023-01-31	\N	t
186	4	41	\N	2023-02-28	\N	t
187	4	41	\N	2023-03-31	\N	t
188	4	41	\N	2023-04-30	\N	t
189	4	41	\N	2023-05-31	\N	t
190	5	41	\N	2022-09-30	\N	t
191	5	41	\N	2022-10-31	\N	t
192	5	41	\N	2022-11-30	\N	t
193	5	41	\N	2022-12-31	\N	t
194	5	41	\N	2023-01-31	\N	t
195	5	41	\N	2023-02-28	\N	t
196	5	41	\N	2023-03-31	\N	t
197	5	41	\N	2023-04-30	\N	t
198	5	41	\N	2023-05-31	\N	t
199	6	41	\N	2022-09-30	\N	t
200	6	41	\N	2022-10-31	\N	t
201	6	41	\N	2022-11-30	\N	t
202	6	41	\N	2022-12-31	\N	t
203	6	41	\N	2023-01-31	\N	t
204	6	41	\N	2023-02-28	\N	t
205	6	41	\N	2023-03-31	\N	t
206	6	41	\N	2023-04-30	\N	t
207	6	41	\N	2023-05-31	\N	t
208	7	41	\N	2022-09-30	\N	t
209	7	41	\N	2022-10-31	\N	t
210	7	41	\N	2022-11-30	\N	t
211	7	41	\N	2022-12-31	\N	t
212	7	41	\N	2023-01-31	\N	t
213	7	41	\N	2023-02-28	\N	t
214	7	41	\N	2023-03-31	\N	t
215	7	41	\N	2023-04-30	\N	t
216	7	41	\N	2023-05-31	\N	t
217	8	41	\N	2022-09-30	\N	t
218	8	41	\N	2022-10-31	\N	t
219	8	41	\N	2022-11-30	\N	t
220	8	41	\N	2022-12-31	\N	t
221	8	41	\N	2023-01-31	\N	t
222	8	41	\N	2023-02-28	\N	t
223	8	41	\N	2023-03-31	\N	t
224	8	41	\N	2023-04-30	\N	t
225	8	41	\N	2023-05-31	\N	t
226	9	41	\N	2022-09-30	\N	t
227	9	41	\N	2022-10-31	\N	t
228	9	41	\N	2022-11-30	\N	t
229	9	41	\N	2022-12-31	\N	t
230	9	41	\N	2023-01-31	\N	t
231	9	41	\N	2023-02-28	\N	t
232	9	41	\N	2023-03-31	\N	t
233	9	41	\N	2023-04-30	\N	t
234	9	41	\N	2023-05-31	\N	t
\.


--
-- TOC entry 3400 (class 0 OID 16419)
-- Dependencies: 219
-- Data for Name: jobs; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.jobs (id, title) FROM stdin;
1	Учитель начальных классов
2	Учитель старших классов
3	Завуч по УВР
4	Завуч по НМР
5	Завуч по ОБЖ
6	Психолог
7	Заведующий хозяйством
8	Социальный педагог
9	Директор
\.


--
-- TOC entry 3409 (class 0 OID 16567)
-- Dependencies: 228
-- Data for Name: periodicity; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.periodicity (id, title, dates) FROM stdin;
1	Конец каждой четверти	{2000-10-27,2000-12-22,2001-03-23,2001-05-31}
2	Начало каждой четверти	{2000-09-01,2000-11-08,2001-01-08,2001-04-01}
3	Конец каждого месяца	{2000-09-30,2000-10-31,2000-11-30,2000-12-31,2001-01-31,2001-02-28,2001-03-31,2001-04-30,2001-05-31}
4	Конец каждого полугодия	{2000-12-22,2001-05-31}
5	Начало учебного года	{2000-09-01}
6	Конец учебного года	{2001-05-31}
\.


--
-- TOC entry 3405 (class 0 OID 16445)
-- Dependencies: 224
-- Data for Name: schedule; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.schedule (id, "docType", "jobOfResponsible", period) FROM stdin;
39	1	1	1
40	2	1	1
41	3	1	3
\.


--
-- TOC entry 3410 (class 0 OID 25734)
-- Dependencies: 229
-- Data for Name: temp1; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.temp1 (id, worker, reason, "linkToFile", "dateToPass", "dateOfPass", "isRelevant") FROM stdin;
82	1	39	\N	2022-10-27	\N	t
83	1	39	\N	2022-12-22	\N	t
84	1	39	\N	2023-03-23	\N	t
85	1	39	\N	2023-05-31	\N	t
86	2	39	\N	2022-10-27	\N	t
87	2	39	\N	2022-12-22	\N	t
88	2	39	\N	2023-03-23	\N	t
89	2	39	\N	2023-05-31	\N	t
90	3	39	\N	2022-10-27	\N	t
91	3	39	\N	2022-12-22	\N	t
92	3	39	\N	2023-03-23	\N	t
93	3	39	\N	2023-05-31	\N	t
94	4	39	\N	2022-10-27	\N	t
95	4	39	\N	2022-12-22	\N	t
96	4	39	\N	2023-03-23	\N	t
97	4	39	\N	2023-05-31	\N	t
98	5	39	\N	2022-10-27	\N	t
99	5	39	\N	2022-12-22	\N	t
100	5	39	\N	2023-03-23	\N	t
101	5	39	\N	2023-05-31	\N	t
102	6	39	\N	2022-10-27	\N	t
103	6	39	\N	2022-12-22	\N	t
104	6	39	\N	2023-03-23	\N	t
105	6	39	\N	2023-05-31	\N	t
106	7	39	\N	2022-10-27	\N	t
107	7	39	\N	2022-12-22	\N	t
108	7	39	\N	2023-03-23	\N	t
109	7	39	\N	2023-05-31	\N	t
110	8	39	\N	2022-10-27	\N	t
111	8	39	\N	2022-12-22	\N	t
112	8	39	\N	2023-03-23	\N	t
113	8	39	\N	2023-05-31	\N	t
114	9	39	\N	2022-10-27	\N	t
115	9	39	\N	2022-12-22	\N	t
116	9	39	\N	2023-03-23	\N	t
117	9	39	\N	2023-05-31	\N	t
118	1	40	\N	2022-10-27	\N	t
119	1	40	\N	2022-12-22	\N	t
120	1	40	\N	2023-03-23	\N	t
121	1	40	\N	2023-05-31	\N	t
122	2	40	\N	2022-10-27	\N	t
123	2	40	\N	2022-12-22	\N	t
124	2	40	\N	2023-03-23	\N	t
125	2	40	\N	2023-05-31	\N	t
126	3	40	\N	2022-10-27	\N	t
127	3	40	\N	2022-12-22	\N	t
128	3	40	\N	2023-03-23	\N	t
129	3	40	\N	2023-05-31	\N	t
130	4	40	\N	2022-10-27	\N	t
131	4	40	\N	2022-12-22	\N	t
132	4	40	\N	2023-03-23	\N	t
133	4	40	\N	2023-05-31	\N	t
134	5	40	\N	2022-10-27	\N	t
135	5	40	\N	2022-12-22	\N	t
136	5	40	\N	2023-03-23	\N	t
137	5	40	\N	2023-05-31	\N	t
138	6	40	\N	2022-10-27	\N	t
139	6	40	\N	2022-12-22	\N	t
140	6	40	\N	2023-03-23	\N	t
141	6	40	\N	2023-05-31	\N	t
142	7	40	\N	2022-10-27	\N	t
143	7	40	\N	2022-12-22	\N	t
144	7	40	\N	2023-03-23	\N	t
145	7	40	\N	2023-05-31	\N	t
146	8	40	\N	2022-10-27	\N	t
147	8	40	\N	2022-12-22	\N	t
148	8	40	\N	2023-03-23	\N	t
149	8	40	\N	2023-05-31	\N	t
150	9	40	\N	2022-10-27	\N	t
151	9	40	\N	2022-12-22	\N	t
152	9	40	\N	2023-03-23	\N	t
153	9	40	\N	2023-05-31	\N	t
154	1	41	\N	2022-09-30	\N	t
155	1	41	\N	2022-10-31	\N	t
156	1	41	\N	2022-11-30	\N	t
157	1	41	\N	2022-12-31	\N	t
158	1	41	\N	2023-01-31	\N	t
159	1	41	\N	2023-02-28	\N	t
160	1	41	\N	2023-03-31	\N	t
161	1	41	\N	2023-04-30	\N	t
162	1	41	\N	2023-05-31	\N	t
163	2	41	\N	2022-09-30	\N	t
164	2	41	\N	2022-10-31	\N	t
165	2	41	\N	2022-11-30	\N	t
166	2	41	\N	2022-12-31	\N	t
167	2	41	\N	2023-01-31	\N	t
168	2	41	\N	2023-02-28	\N	t
169	2	41	\N	2023-03-31	\N	t
170	2	41	\N	2023-04-30	\N	t
171	2	41	\N	2023-05-31	\N	t
172	3	41	\N	2022-09-30	\N	t
173	3	41	\N	2022-10-31	\N	t
174	3	41	\N	2022-11-30	\N	t
175	3	41	\N	2022-12-31	\N	t
176	3	41	\N	2023-01-31	\N	t
177	3	41	\N	2023-02-28	\N	t
178	3	41	\N	2023-03-31	\N	t
179	3	41	\N	2023-04-30	\N	t
180	3	41	\N	2023-05-31	\N	t
181	4	41	\N	2022-09-30	\N	t
182	4	41	\N	2022-10-31	\N	t
183	4	41	\N	2022-11-30	\N	t
184	4	41	\N	2022-12-31	\N	t
185	4	41	\N	2023-01-31	\N	t
186	4	41	\N	2023-02-28	\N	t
187	4	41	\N	2023-03-31	\N	t
188	4	41	\N	2023-04-30	\N	t
189	4	41	\N	2023-05-31	\N	t
190	5	41	\N	2022-09-30	\N	t
191	5	41	\N	2022-10-31	\N	t
192	5	41	\N	2022-11-30	\N	t
193	5	41	\N	2022-12-31	\N	t
194	5	41	\N	2023-01-31	\N	t
195	5	41	\N	2023-02-28	\N	t
196	5	41	\N	2023-03-31	\N	t
197	5	41	\N	2023-04-30	\N	t
198	5	41	\N	2023-05-31	\N	t
199	6	41	\N	2022-09-30	\N	t
200	6	41	\N	2022-10-31	\N	t
201	6	41	\N	2022-11-30	\N	t
202	6	41	\N	2022-12-31	\N	t
203	6	41	\N	2023-01-31	\N	t
204	6	41	\N	2023-02-28	\N	t
205	6	41	\N	2023-03-31	\N	t
206	6	41	\N	2023-04-30	\N	t
207	6	41	\N	2023-05-31	\N	t
208	7	41	\N	2022-09-30	\N	t
209	7	41	\N	2022-10-31	\N	t
210	7	41	\N	2022-11-30	\N	t
211	7	41	\N	2022-12-31	\N	t
212	7	41	\N	2023-01-31	\N	t
213	7	41	\N	2023-02-28	\N	t
214	7	41	\N	2023-03-31	\N	t
215	7	41	\N	2023-04-30	\N	t
216	7	41	\N	2023-05-31	\N	t
217	8	41	\N	2022-09-30	\N	t
218	8	41	\N	2022-10-31	\N	t
219	8	41	\N	2022-11-30	\N	t
220	8	41	\N	2022-12-31	\N	t
221	8	41	\N	2023-01-31	\N	t
222	8	41	\N	2023-02-28	\N	t
223	8	41	\N	2023-03-31	\N	t
224	8	41	\N	2023-04-30	\N	t
225	8	41	\N	2023-05-31	\N	t
226	9	41	\N	2022-09-30	\N	t
227	9	41	\N	2022-10-31	\N	t
228	9	41	\N	2022-11-30	\N	t
229	9	41	\N	2022-12-31	\N	t
230	9	41	\N	2023-01-31	\N	t
231	9	41	\N	2023-02-28	\N	t
232	9	41	\N	2023-03-31	\N	t
233	9	41	\N	2023-04-30	\N	t
234	9	41	\N	2023-05-31	\N	t
\.


--
-- TOC entry 3411 (class 0 OID 25739)
-- Dependencies: 230
-- Data for Name: temp2; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.temp2 (id, worker, "fullName", job, "docType", "linkToFile", "dateToPass", "dateOfPass", "isRelevant") FROM stdin;
82	1	Новикова Анастасия Павловна	1	1	\N	2022-10-27	\N	t
83	1	Новикова Анастасия Павловна	1	1	\N	2022-12-22	\N	t
84	1	Новикова Анастасия Павловна	1	1	\N	2023-03-23	\N	t
85	1	Новикова Анастасия Павловна	1	1	\N	2023-05-31	\N	t
86	2	Смирнов Александр Александрович	1	1	\N	2022-10-27	\N	t
87	2	Смирнов Александр Александрович	1	1	\N	2022-12-22	\N	t
88	2	Смирнов Александр Александрович	1	1	\N	2023-03-23	\N	t
89	2	Смирнов Александр Александрович	1	1	\N	2023-05-31	\N	t
90	3	Федотова Евгения Сергеевна	1	1	\N	2022-10-27	\N	t
91	3	Федотова Евгения Сергеевна	1	1	\N	2022-12-22	\N	t
92	3	Федотова Евгения Сергеевна	1	1	\N	2023-03-23	\N	t
93	3	Федотова Евгения Сергеевна	1	1	\N	2023-05-31	\N	t
94	4	Евсеева Татьяна Ивановна	1	1	\N	2022-10-27	\N	t
95	4	Евсеева Татьяна Ивановна	1	1	\N	2022-12-22	\N	t
96	4	Евсеева Татьяна Ивановна	1	1	\N	2023-03-23	\N	t
97	4	Евсеева Татьяна Ивановна	1	1	\N	2023-05-31	\N	t
98	5	Мещерякова Мария Владимировна	1	1	\N	2022-10-27	\N	t
99	5	Мещерякова Мария Владимировна	1	1	\N	2022-12-22	\N	t
100	5	Мещерякова Мария Владимировна	1	1	\N	2023-03-23	\N	t
101	5	Мещерякова Мария Владимировна	1	1	\N	2023-05-31	\N	t
102	6	Герасимова Юлия Артемьевна	1	1	\N	2022-10-27	\N	t
103	6	Герасимова Юлия Артемьевна	1	1	\N	2022-12-22	\N	t
104	6	Герасимова Юлия Артемьевна	1	1	\N	2023-03-23	\N	t
105	6	Герасимова Юлия Артемьевна	1	1	\N	2023-05-31	\N	t
106	7	Прохоров Иван Павлович	1	1	\N	2022-10-27	\N	t
107	7	Прохоров Иван Павлович	1	1	\N	2022-12-22	\N	t
108	7	Прохоров Иван Павлович	1	1	\N	2023-03-23	\N	t
109	7	Прохоров Иван Павлович	1	1	\N	2023-05-31	\N	t
110	8	Терехова Алиса Владимировна	1	1	\N	2022-10-27	\N	t
111	8	Терехова Алиса Владимировна	1	1	\N	2022-12-22	\N	t
112	8	Терехова Алиса Владимировна	1	1	\N	2023-03-23	\N	t
113	8	Терехова Алиса Владимировна	1	1	\N	2023-05-31	\N	t
114	9	Воробьева Виктория Максимовна	1	1	\N	2022-10-27	\N	t
115	9	Воробьева Виктория Максимовна	1	1	\N	2022-12-22	\N	t
116	9	Воробьева Виктория Максимовна	1	1	\N	2023-03-23	\N	t
117	9	Воробьева Виктория Максимовна	1	1	\N	2023-05-31	\N	t
118	1	Новикова Анастасия Павловна	1	2	\N	2022-10-27	\N	t
119	1	Новикова Анастасия Павловна	1	2	\N	2022-12-22	\N	t
120	1	Новикова Анастасия Павловна	1	2	\N	2023-03-23	\N	t
121	1	Новикова Анастасия Павловна	1	2	\N	2023-05-31	\N	t
122	2	Смирнов Александр Александрович	1	2	\N	2022-10-27	\N	t
123	2	Смирнов Александр Александрович	1	2	\N	2022-12-22	\N	t
124	2	Смирнов Александр Александрович	1	2	\N	2023-03-23	\N	t
125	2	Смирнов Александр Александрович	1	2	\N	2023-05-31	\N	t
126	3	Федотова Евгения Сергеевна	1	2	\N	2022-10-27	\N	t
127	3	Федотова Евгения Сергеевна	1	2	\N	2022-12-22	\N	t
128	3	Федотова Евгения Сергеевна	1	2	\N	2023-03-23	\N	t
129	3	Федотова Евгения Сергеевна	1	2	\N	2023-05-31	\N	t
130	4	Евсеева Татьяна Ивановна	1	2	\N	2022-10-27	\N	t
131	4	Евсеева Татьяна Ивановна	1	2	\N	2022-12-22	\N	t
132	4	Евсеева Татьяна Ивановна	1	2	\N	2023-03-23	\N	t
133	4	Евсеева Татьяна Ивановна	1	2	\N	2023-05-31	\N	t
134	5	Мещерякова Мария Владимировна	1	2	\N	2022-10-27	\N	t
135	5	Мещерякова Мария Владимировна	1	2	\N	2022-12-22	\N	t
136	5	Мещерякова Мария Владимировна	1	2	\N	2023-03-23	\N	t
137	5	Мещерякова Мария Владимировна	1	2	\N	2023-05-31	\N	t
138	6	Герасимова Юлия Артемьевна	1	2	\N	2022-10-27	\N	t
139	6	Герасимова Юлия Артемьевна	1	2	\N	2022-12-22	\N	t
140	6	Герасимова Юлия Артемьевна	1	2	\N	2023-03-23	\N	t
141	6	Герасимова Юлия Артемьевна	1	2	\N	2023-05-31	\N	t
142	7	Прохоров Иван Павлович	1	2	\N	2022-10-27	\N	t
143	7	Прохоров Иван Павлович	1	2	\N	2022-12-22	\N	t
144	7	Прохоров Иван Павлович	1	2	\N	2023-03-23	\N	t
145	7	Прохоров Иван Павлович	1	2	\N	2023-05-31	\N	t
146	8	Терехова Алиса Владимировна	1	2	\N	2022-10-27	\N	t
147	8	Терехова Алиса Владимировна	1	2	\N	2022-12-22	\N	t
148	8	Терехова Алиса Владимировна	1	2	\N	2023-03-23	\N	t
149	8	Терехова Алиса Владимировна	1	2	\N	2023-05-31	\N	t
150	9	Воробьева Виктория Максимовна	1	2	\N	2022-10-27	\N	t
151	9	Воробьева Виктория Максимовна	1	2	\N	2022-12-22	\N	t
152	9	Воробьева Виктория Максимовна	1	2	\N	2023-03-23	\N	t
153	9	Воробьева Виктория Максимовна	1	2	\N	2023-05-31	\N	t
154	1	Новикова Анастасия Павловна	1	3	\N	2022-09-30	\N	t
155	1	Новикова Анастасия Павловна	1	3	\N	2022-10-31	\N	t
156	1	Новикова Анастасия Павловна	1	3	\N	2022-11-30	\N	t
157	1	Новикова Анастасия Павловна	1	3	\N	2022-12-31	\N	t
158	1	Новикова Анастасия Павловна	1	3	\N	2023-01-31	\N	t
159	1	Новикова Анастасия Павловна	1	3	\N	2023-02-28	\N	t
160	1	Новикова Анастасия Павловна	1	3	\N	2023-03-31	\N	t
161	1	Новикова Анастасия Павловна	1	3	\N	2023-04-30	\N	t
162	1	Новикова Анастасия Павловна	1	3	\N	2023-05-31	\N	t
163	2	Смирнов Александр Александрович	1	3	\N	2022-09-30	\N	t
164	2	Смирнов Александр Александрович	1	3	\N	2022-10-31	\N	t
165	2	Смирнов Александр Александрович	1	3	\N	2022-11-30	\N	t
166	2	Смирнов Александр Александрович	1	3	\N	2022-12-31	\N	t
167	2	Смирнов Александр Александрович	1	3	\N	2023-01-31	\N	t
168	2	Смирнов Александр Александрович	1	3	\N	2023-02-28	\N	t
169	2	Смирнов Александр Александрович	1	3	\N	2023-03-31	\N	t
170	2	Смирнов Александр Александрович	1	3	\N	2023-04-30	\N	t
171	2	Смирнов Александр Александрович	1	3	\N	2023-05-31	\N	t
172	3	Федотова Евгения Сергеевна	1	3	\N	2022-09-30	\N	t
173	3	Федотова Евгения Сергеевна	1	3	\N	2022-10-31	\N	t
174	3	Федотова Евгения Сергеевна	1	3	\N	2022-11-30	\N	t
175	3	Федотова Евгения Сергеевна	1	3	\N	2022-12-31	\N	t
176	3	Федотова Евгения Сергеевна	1	3	\N	2023-01-31	\N	t
177	3	Федотова Евгения Сергеевна	1	3	\N	2023-02-28	\N	t
178	3	Федотова Евгения Сергеевна	1	3	\N	2023-03-31	\N	t
179	3	Федотова Евгения Сергеевна	1	3	\N	2023-04-30	\N	t
180	3	Федотова Евгения Сергеевна	1	3	\N	2023-05-31	\N	t
181	4	Евсеева Татьяна Ивановна	1	3	\N	2022-09-30	\N	t
182	4	Евсеева Татьяна Ивановна	1	3	\N	2022-10-31	\N	t
183	4	Евсеева Татьяна Ивановна	1	3	\N	2022-11-30	\N	t
184	4	Евсеева Татьяна Ивановна	1	3	\N	2022-12-31	\N	t
185	4	Евсеева Татьяна Ивановна	1	3	\N	2023-01-31	\N	t
186	4	Евсеева Татьяна Ивановна	1	3	\N	2023-02-28	\N	t
187	4	Евсеева Татьяна Ивановна	1	3	\N	2023-03-31	\N	t
188	4	Евсеева Татьяна Ивановна	1	3	\N	2023-04-30	\N	t
189	4	Евсеева Татьяна Ивановна	1	3	\N	2023-05-31	\N	t
190	5	Мещерякова Мария Владимировна	1	3	\N	2022-09-30	\N	t
191	5	Мещерякова Мария Владимировна	1	3	\N	2022-10-31	\N	t
192	5	Мещерякова Мария Владимировна	1	3	\N	2022-11-30	\N	t
193	5	Мещерякова Мария Владимировна	1	3	\N	2022-12-31	\N	t
194	5	Мещерякова Мария Владимировна	1	3	\N	2023-01-31	\N	t
195	5	Мещерякова Мария Владимировна	1	3	\N	2023-02-28	\N	t
196	5	Мещерякова Мария Владимировна	1	3	\N	2023-03-31	\N	t
197	5	Мещерякова Мария Владимировна	1	3	\N	2023-04-30	\N	t
198	5	Мещерякова Мария Владимировна	1	3	\N	2023-05-31	\N	t
199	6	Герасимова Юлия Артемьевна	1	3	\N	2022-09-30	\N	t
200	6	Герасимова Юлия Артемьевна	1	3	\N	2022-10-31	\N	t
201	6	Герасимова Юлия Артемьевна	1	3	\N	2022-11-30	\N	t
202	6	Герасимова Юлия Артемьевна	1	3	\N	2022-12-31	\N	t
203	6	Герасимова Юлия Артемьевна	1	3	\N	2023-01-31	\N	t
204	6	Герасимова Юлия Артемьевна	1	3	\N	2023-02-28	\N	t
205	6	Герасимова Юлия Артемьевна	1	3	\N	2023-03-31	\N	t
206	6	Герасимова Юлия Артемьевна	1	3	\N	2023-04-30	\N	t
207	6	Герасимова Юлия Артемьевна	1	3	\N	2023-05-31	\N	t
208	7	Прохоров Иван Павлович	1	3	\N	2022-09-30	\N	t
209	7	Прохоров Иван Павлович	1	3	\N	2022-10-31	\N	t
210	7	Прохоров Иван Павлович	1	3	\N	2022-11-30	\N	t
211	7	Прохоров Иван Павлович	1	3	\N	2022-12-31	\N	t
212	7	Прохоров Иван Павлович	1	3	\N	2023-01-31	\N	t
213	7	Прохоров Иван Павлович	1	3	\N	2023-02-28	\N	t
214	7	Прохоров Иван Павлович	1	3	\N	2023-03-31	\N	t
215	7	Прохоров Иван Павлович	1	3	\N	2023-04-30	\N	t
216	7	Прохоров Иван Павлович	1	3	\N	2023-05-31	\N	t
217	8	Терехова Алиса Владимировна	1	3	\N	2022-09-30	\N	t
218	8	Терехова Алиса Владимировна	1	3	\N	2022-10-31	\N	t
219	8	Терехова Алиса Владимировна	1	3	\N	2022-11-30	\N	t
220	8	Терехова Алиса Владимировна	1	3	\N	2022-12-31	\N	t
221	8	Терехова Алиса Владимировна	1	3	\N	2023-01-31	\N	t
222	8	Терехова Алиса Владимировна	1	3	\N	2023-02-28	\N	t
223	8	Терехова Алиса Владимировна	1	3	\N	2023-03-31	\N	t
224	8	Терехова Алиса Владимировна	1	3	\N	2023-04-30	\N	t
225	8	Терехова Алиса Владимировна	1	3	\N	2023-05-31	\N	t
226	9	Воробьева Виктория Максимовна	1	3	\N	2022-09-30	\N	t
227	9	Воробьева Виктория Максимовна	1	3	\N	2022-10-31	\N	t
228	9	Воробьева Виктория Максимовна	1	3	\N	2022-11-30	\N	t
229	9	Воробьева Виктория Максимовна	1	3	\N	2022-12-31	\N	t
230	9	Воробьева Виктория Максимовна	1	3	\N	2023-01-31	\N	t
231	9	Воробьева Виктория Максимовна	1	3	\N	2023-02-28	\N	t
232	9	Воробьева Виктория Максимовна	1	3	\N	2023-03-31	\N	t
233	9	Воробьева Виктория Максимовна	1	3	\N	2023-04-30	\N	t
234	9	Воробьева Виктория Максимовна	1	3	\N	2023-05-31	\N	t
\.


--
-- TOC entry 3412 (class 0 OID 25744)
-- Dependencies: 231
-- Data for Name: temp3; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.temp3 (id, worker, "fullName", job, "jobTitle", "docType", doctypetitle, "linkToFile", "dateToPass", "dateOfPass", "isRelevant") FROM stdin;
\.


--
-- TOC entry 3403 (class 0 OID 16432)
-- Dependencies: 222
-- Data for Name: workers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.workers (id, "fullName", job, "isClassroomTeacher") FROM stdin;
1	Новикова Анастасия Павловна	1	f
2	Смирнов Александр Александрович	1	t
3	Федотова Евгения Сергеевна	1	t
4	Евсеева Татьяна Ивановна	1	t
5	Мещерякова Мария Владимировна	1	f
6	Герасимова Юлия Артемьевна	1	t
7	Прохоров Иван Павлович	1	f
8	Терехова Алиса Владимировна	1	t
9	Воробьева Виктория Максимовна	1	t
10	Воробьев Степан Михайлович	2	t
11	Кузьмина Юлия Сергеевна	2	t
12	Гуляев Тимур Алексеевич	2	f
13	Степанова Анна Кирилловна	2	t
14	Давыдова Ева Викторовна	2	t
15	Касаткина Анна Константиновна	2	f
16	Исаева Вера Михайловна	2	t
17	Нестерова Екатерина Сергеевна	2	t
18	Кулешова Елизавета Алексеевна	2	t
19	Семенова Вероника Артёмовна	3	f
20	Павлова Полина Кирилловна	4	f
21	Добрынин Дмитрий Дмитриевич	5	f
22	Березина Анастасия Арсентьевна	6	f
23	Алексеева Марина Григорьевна	7	f
24	Карташова Софья Петровна	8	f
25	Никитин Кирилл Николаевич	9	f
\.


--
-- TOC entry 3418 (class 0 OID 0)
-- Dependencies: 217
-- Name: doc_types_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.doc_types_id_seq', 19, true);


--
-- TOC entry 3419 (class 0 OID 0)
-- Dependencies: 225
-- Name: fact_docs_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.fact_docs_id_seq', 234, true);


--
-- TOC entry 3420 (class 0 OID 0)
-- Dependencies: 220
-- Name: jobs_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.jobs_id_seq', 11, true);


--
-- TOC entry 3421 (class 0 OID 0)
-- Dependencies: 227
-- Name: periodicity_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.periodicity_id_seq', 7, true);


--
-- TOC entry 3422 (class 0 OID 0)
-- Dependencies: 223
-- Name: schedule_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.schedule_id_seq', 41, true);


--
-- TOC entry 3423 (class 0 OID 0)
-- Dependencies: 221
-- Name: workers_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.workers_id_seq', 30, true);


--
-- TOC entry 3233 (class 2606 OID 16428)
-- Name: doc_types doc_types_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.doc_types
    ADD CONSTRAINT doc_types_name_key UNIQUE (title);


--
-- TOC entry 3235 (class 2606 OID 16418)
-- Name: doc_types doc_types_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.doc_types
    ADD CONSTRAINT doc_types_pkey PRIMARY KEY (id);


--
-- TOC entry 3247 (class 2606 OID 16479)
-- Name: fact_docs fact_docs_linkToFile_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.fact_docs
    ADD CONSTRAINT "fact_docs_linkToFile_key" UNIQUE ("linkToFile");


--
-- TOC entry 3249 (class 2606 OID 16477)
-- Name: fact_docs fact_docs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.fact_docs
    ADD CONSTRAINT fact_docs_pkey PRIMARY KEY (id);


--
-- TOC entry 3237 (class 2606 OID 16430)
-- Name: jobs jobs_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.jobs
    ADD CONSTRAINT jobs_name_key UNIQUE (title);


--
-- TOC entry 3239 (class 2606 OID 16425)
-- Name: jobs jobs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.jobs
    ADD CONSTRAINT jobs_pkey PRIMARY KEY (id);


--
-- TOC entry 3251 (class 2606 OID 25413)
-- Name: periodicity periodicity_dates_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.periodicity
    ADD CONSTRAINT periodicity_dates_key UNIQUE (dates);


--
-- TOC entry 3253 (class 2606 OID 16573)
-- Name: periodicity periodicity_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.periodicity
    ADD CONSTRAINT periodicity_pkey PRIMARY KEY (id);


--
-- TOC entry 3255 (class 2606 OID 16575)
-- Name: periodicity periodicity_title_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.periodicity
    ADD CONSTRAINT periodicity_title_key UNIQUE (title);


--
-- TOC entry 3243 (class 2606 OID 16544)
-- Name: schedule schedule_docType_jobOfResponsible_dateToPass_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.schedule
    ADD CONSTRAINT "schedule_docType_jobOfResponsible_dateToPass_key" UNIQUE ("docType", "jobOfResponsible", period);


--
-- TOC entry 3245 (class 2606 OID 16449)
-- Name: schedule schedule_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.schedule
    ADD CONSTRAINT schedule_pkey PRIMARY KEY (id);


--
-- TOC entry 3241 (class 2606 OID 16438)
-- Name: workers workers_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workers
    ADD CONSTRAINT workers_pkey PRIMARY KEY (id);


--
-- TOC entry 3257 (class 2606 OID 16460)
-- Name: schedule schedule_docType_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.schedule
    ADD CONSTRAINT "schedule_docType_fkey" FOREIGN KEY ("docType") REFERENCES public.doc_types(id) ON UPDATE CASCADE ON DELETE RESTRICT NOT VALID;


--
-- TOC entry 3258 (class 2606 OID 16465)
-- Name: schedule schedule_jobOfResponsible_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.schedule
    ADD CONSTRAINT "schedule_jobOfResponsible_fkey" FOREIGN KEY ("jobOfResponsible") REFERENCES public.jobs(id) ON UPDATE CASCADE ON DELETE RESTRICT NOT VALID;


--
-- TOC entry 3256 (class 2606 OID 16439)
-- Name: workers workers_job_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workers
    ADD CONSTRAINT workers_job_fkey FOREIGN KEY (job) REFERENCES public.jobs(id) ON UPDATE CASCADE ON DELETE SET NULL;


-- Completed on 2022-10-25 22:22:36

--
-- PostgreSQL database dump complete
--

