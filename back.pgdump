--
-- PostgreSQL database dump
--

-- Dumped from database version 14.4
-- Dumped by pg_dump version 14.4

-- Started on 2022-10-20 18:18:00

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- TOC entry 227 (class 1255 OID 16511)
-- Name: add_doc_type(text, text); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.add_doc_type(IN _title text, IN _linktoshablon text)
    LANGUAGE plpgsql
    AS $$
declare
	exist integer;
begin
	select count(*)
	into exist
	from doc_types
	where title = _title;
	
	if exist > 0 then
		raise exception 'Этот тип документа уже существует';
	else
		insert into doc_types (title, "linkToShablon") values (_title, _linkToShablon);
	end if;
end;
$$;


ALTER PROCEDURE public.add_doc_type(IN _title text, IN _linktoshablon text) OWNER TO postgres;

--
-- TOC entry 237 (class 1255 OID 16512)
-- Name: add_job(text); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.add_job(IN _title text)
    LANGUAGE plpgsql
    AS $$
declare
	exist integer;
begin
	select count(*)
	into exist
	from jobs
	where title = _title;
	
	if exist > 0 then
		raise exception 'Эта должность уже существует';
	else
		insert into jobs (title) values (_title);
	end if;
end;
$$;


ALTER PROCEDURE public.add_job(IN _title text) OWNER TO postgres;

--
-- TOC entry 239 (class 1255 OID 16577)
-- Name: add_periodicity(text, text[]); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.add_periodicity(IN _title text, IN _dates text[])
    LANGUAGE plpgsql
    AS $$
declare
	dateDate date[];
	exist integer;
begin
	
	-- переводим массив строк в массив дат
	for i in 1..array_length(_dates, 1) loop
		begin
			dateDate[i] = to_date(_dates[i], 'DD.MM.YYYY');
		exception
			when datetime_field_overflow then
				raise exception 'Неправильный формат ввода даты';
				return;
		end;
	end loop;
	
	-- проверка уникальности создаваемой записи
	-- по крайней мере по названию периодичности
	select count(*)
	into exist
	from periodicity
	where "title" = _title;
	
	if exist > 0 then
		raise exception 'Такая периодичность уже существует';
	else
		insert into periodicity ("title", "dates") values (_title, dateDate);
	end if;
	
end;
$$;


ALTER PROCEDURE public.add_periodicity(IN _title text, IN _dates text[]) OWNER TO postgres;

--
-- TOC entry 238 (class 1255 OID 16555)
-- Name: add_schedule(integer, integer, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.add_schedule(IN _doctype integer, IN _jobofresponsible integer, IN _period integer)
    LANGUAGE plpgsql
    AS $$
declare
	exist integer;
	existDocType integer;
	existJob integer;
	existPeriodicity integer;
begin

	--проверка уникальности создаваемой записи
	select count (*)
	into exist
	from schedule
	where "docType" = _docType and "jobOfResponsible" = _jobOfResponsible and "period" = _period;
	
	--проверка существования типа документа
	select count (*)
	into existDocType
	from doc_types
	where id = _docType;
	
	--проверка существования должности
	select count (*)
	into existJob
	from jobs
	where id = _jobOfResponsible;
	
	--проверка существования периодичности
	select count (*)
	into existPeriodicity
	from periodicity
	where id = _period;
	
	if exist > 0 then
		raise exception 'Такой пункт в расписании уже существует';
	elseif existDocType = 0 then
		raise exception 'Такого типа документа не существует';
	elseif existJob = 0 then
		raise exception 'Такой должности не существует';
	elseif existPeriodicity = 0 then
		raise exception 'Такой периодичности не существует';
	else
		insert into schedule ("docType", "jobOfResponsible", "period") values (_docType, _jobOfResponsible, _period);
	end if;
	
	-- вставляем данные также и в факт доки
	
end;
$$;


ALTER PROCEDURE public.add_schedule(IN _doctype integer, IN _jobofresponsible integer, IN _period integer) OWNER TO postgres;

--
-- TOC entry 236 (class 1255 OID 16516)
-- Name: add_worker(text, integer, boolean); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.add_worker(IN _fullname text, IN _job integer, IN _isclassroomteacher boolean)
    LANGUAGE plpgsql
    AS $$
declare
	exist integer;
begin
	select count (*)
	into exist
	from jobs
	where id = _job;
	
	if exist = 0 then
		raise exception 'Такой должности не существует';
	else
		insert into workers ("fullName", job, "isClassroomTeacher") values (_fullName, _job, _isClassroomTeacher);
	end if;
end;
$$;


ALTER PROCEDURE public.add_worker(IN _fullname text, IN _job integer, IN _isclassroomteacher boolean) OWNER TO postgres;

--
-- TOC entry 240 (class 1255 OID 24921)
-- Name: get_year(date, date); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_year(null_date date, cur date) RETURNS date
    LANGUAGE plpgsql
    AS $$
declare
	chared_extract text;
	my_interval interval;
begin
	-- 07 июль - месяц перезагрузки
	
	my_interval = age(cur, null_date);
	
	-- текущая дата до НГ
	-- входящая дата до НГ
	if to_char(cur, 'MM-DD') > '07-31' and to_char(null_date, 'MM-DD') > '07-31' then
		if to_char(cur, 'MM-DD') < to_char(null_date, 'MM-DD') then
			return null_date + interval '1 year' * (extract(year from my_interval) + 1);
		else
			return null_date + interval '1 year' * extract(year from my_interval);
		end if;
	-- текущая дата после НГ
	-- входящая дата после НГ	
	elsif to_char(cur, 'MM-DD') < '07-01' and to_char(null_date, 'MM-DD') < '07-01' then
		if to_char(cur, 'MM-DD') < to_char(null_date, 'MM-DD') then
			return null_date + interval '1 year' * (extract(year from my_interval) + 1);
		else
			return null_date + interval '1 year' * extract(year from my_interval);
		end if;
	-- текущая дата до НГ
	-- входящая дата после НГ	
	elsif to_char(cur, 'MM-DD') > '07-01' and to_char(null_date, 'MM-DD') < '07-01' then
		return null_date + interval '1 year' * (extract(year from my_interval) + 1);
	-- текущая дата после НГ
	-- входящая дата до НГ	
	elsif to_char(cur, 'MM-DD') < '07-01' and to_char(null_date, 'MM-DD') > '07-01' then
		return null_date + interval '1 year' * extract(year from my_interval);
	end if;
	

end;
$$;


ALTER FUNCTION public.get_year(null_date date, cur date) OWNER TO postgres;

--
-- TOC entry 223 (class 1255 OID 16580)
-- Name: update_fact_docs(text, text); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.update_fact_docs(IN _title text, IN _linktoshablon text)
    LANGUAGE plpgsql
    AS $$
declare
	exist integer;
begin
	select count(*)
	into exist
	from doc_types
	where title = _title;
	
	if exist > 0 then
		raise exception 'Этот тип документа уже существует';
	else
		insert into doc_types (title, "linkToShablon") values (_title, _linkToShablon);
	end if;
end;
$$;


ALTER PROCEDURE public.update_fact_docs(IN _title text, IN _linktoshablon text) OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- TOC entry 212 (class 1259 OID 16412)
-- Name: doc_types; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.doc_types (
    id integer NOT NULL,
    title text NOT NULL,
    "linkToShablon" text
);


ALTER TABLE public.doc_types OWNER TO postgres;

--
-- TOC entry 211 (class 1259 OID 16411)
-- Name: doc_types_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.doc_types ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.doc_types_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 220 (class 1259 OID 16471)
-- Name: fact_docs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.fact_docs (
    id integer NOT NULL,
    worker integer NOT NULL,
    reason integer,
    "linkToFile" text NOT NULL,
    "passDate" timestamp with time zone NOT NULL
);


ALTER TABLE public.fact_docs OWNER TO postgres;

--
-- TOC entry 219 (class 1259 OID 16470)
-- Name: fact_docs_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.fact_docs ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.fact_docs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 213 (class 1259 OID 16419)
-- Name: jobs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.jobs (
    id integer NOT NULL,
    title text NOT NULL
);


ALTER TABLE public.jobs OWNER TO postgres;

--
-- TOC entry 214 (class 1259 OID 16426)
-- Name: jobs_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.jobs ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.jobs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 222 (class 1259 OID 16567)
-- Name: periodicity; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.periodicity (
    id integer NOT NULL,
    title text NOT NULL,
    dates date[] NOT NULL
);


ALTER TABLE public.periodicity OWNER TO postgres;

--
-- TOC entry 221 (class 1259 OID 16566)
-- Name: periodicity_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.periodicity ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.periodicity_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 218 (class 1259 OID 16445)
-- Name: schedule; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.schedule (
    id integer NOT NULL,
    "docType" integer,
    "jobOfResponsible" integer,
    period integer NOT NULL
);


ALTER TABLE public.schedule OWNER TO postgres;

--
-- TOC entry 217 (class 1259 OID 16444)
-- Name: schedule_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.schedule ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.schedule_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 216 (class 1259 OID 16432)
-- Name: workers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.workers (
    id integer NOT NULL,
    "fullName" text,
    job integer,
    "isClassroomTeacher" boolean NOT NULL
);


ALTER TABLE public.workers OWNER TO postgres;

--
-- TOC entry 215 (class 1259 OID 16431)
-- Name: workers_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.workers ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.workers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 3365 (class 0 OID 16412)
-- Dependencies: 212
-- Data for Name: doc_types; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.doc_types (id, title, "linkToShablon") FROM stdin;
1	Отчёт о воспитательной работе	\N
2	Отчёт по предмету	\N
3	Отчёт по питанию	\N
4	Отчёт по классу	\N
5	Анализ контрольных работ	\N
6	Анализ терминологических диктантов	\N
7	Анализ по предметам	\N
8	Отчёт о посещаемости	\N
9	Инструкция для учителей	\N
10	Инструкция для учащихся	\N
11	Отчёты в КДН	\N
12	Отчёты в ПДН	\N
13	Анализ психологического тестирования учащихся	\N
14	Программа обуения	\N
15	Анализ годовой работы	\N
16	Отчёт по инвентаризации	\N
\.


--
-- TOC entry 3373 (class 0 OID 16471)
-- Dependencies: 220
-- Data for Name: fact_docs; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.fact_docs (id, worker, reason, "linkToFile", "passDate") FROM stdin;
\.


--
-- TOC entry 3366 (class 0 OID 16419)
-- Dependencies: 213
-- Data for Name: jobs; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.jobs (id, title) FROM stdin;
1	Учитель начальных классов
2	Учитель старших классов
3	Завуч по УВР
4	Завуч по НМР
5	Завуч по ОБЖ
6	Психолог
7	Заведующий хозяйством
8	Социальный педагог
9	Директор
10	test
\.


--
-- TOC entry 3375 (class 0 OID 16567)
-- Dependencies: 222
-- Data for Name: periodicity; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.periodicity (id, title, dates) FROM stdin;
1	Конец каждой четверти	{2000-10-27,2000-12-22,2001-03-23,2001-05-31}
2	Начало каждой четверти	{2000-09-01,2000-11-08,2001-01-08,2001-04-01}
3	Конец каждого месяца	{2000-09-30,2000-10-31,2000-11-30,2000-12-31,2001-01-31,2001-02-28,2001-03-31,2001-04-30,2001-05-31}
4	Конец каждого полугодия	{2000-12-22,2001-05-31}
5	Начало учебного года	{2000-09-01}
6	Конец учебного года	{2001-05-31}
\.


--
-- TOC entry 3371 (class 0 OID 16445)
-- Dependencies: 218
-- Data for Name: schedule; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.schedule (id, "docType", "jobOfResponsible", period) FROM stdin;
2	1	1	1
3	2	1	1
4	3	1	3
5	4	1	1
6	5	1	1
7	4	2	1
8	5	2	1
9	6	2	4
10	1	2	1
11	7	3	1
12	8	3	1
13	9	5	5
14	10	5	5
15	13	6	5
16	14	4	5
17	15	4	6
18	16	7	5
19	12	8	1
20	11	8	1
\.


--
-- TOC entry 3369 (class 0 OID 16432)
-- Dependencies: 216
-- Data for Name: workers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.workers (id, "fullName", job, "isClassroomTeacher") FROM stdin;
1	Новикова Анастасия Павловна	1	f
2	Смирнов Александр Александрович	1	t
3	Федотова Евгения Сергеевна	1	t
4	Евсеева Татьяна Ивановна	1	t
5	Мещерякова Мария Владимировна	1	f
6	Герасимова Юлия Артемьевна	1	t
7	Прохоров Иван Павлович	1	f
8	Терехова Алиса Владимировна	1	t
9	Воробьева Виктория Максимовна	1	t
10	Воробьев Степан Михайлович	2	t
11	Кузьмина Юлия Сергеевна	2	t
12	Гуляев Тимур Алексеевич	2	f
13	Степанова Анна Кирилловна	2	t
14	Давыдова Ева Викторовна	2	t
15	Касаткина Анна Константиновна	2	f
16	Исаева Вера Михайловна	2	t
17	Нестерова Екатерина Сергеевна	2	t
18	Кулешова Елизавета Алексеевна	2	t
19	Семенова Вероника Артёмовна	3	f
20	Павлова Полина Кирилловна	4	f
21	Добрынин Дмитрий Дмитриевич	5	f
22	Березина Анастасия Арсентьевна	6	f
23	Алексеева Марина Григорьевна	7	f
24	Карташова Софья Петровна	8	f
25	Никитин Кирилл Николаевич	9	f
\.


--
-- TOC entry 3381 (class 0 OID 0)
-- Dependencies: 211
-- Name: doc_types_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.doc_types_id_seq', 17, true);


--
-- TOC entry 3382 (class 0 OID 0)
-- Dependencies: 219
-- Name: fact_docs_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.fact_docs_id_seq', 1, false);


--
-- TOC entry 3383 (class 0 OID 0)
-- Dependencies: 214
-- Name: jobs_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.jobs_id_seq', 10, true);


--
-- TOC entry 3384 (class 0 OID 0)
-- Dependencies: 221
-- Name: periodicity_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.periodicity_id_seq', 6, true);


--
-- TOC entry 3385 (class 0 OID 0)
-- Dependencies: 217
-- Name: schedule_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.schedule_id_seq', 20, true);


--
-- TOC entry 3386 (class 0 OID 0)
-- Dependencies: 215
-- Name: workers_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.workers_id_seq', 28, true);


--
-- TOC entry 3199 (class 2606 OID 16428)
-- Name: doc_types doc_types_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.doc_types
    ADD CONSTRAINT doc_types_name_key UNIQUE (title);


--
-- TOC entry 3201 (class 2606 OID 16418)
-- Name: doc_types doc_types_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.doc_types
    ADD CONSTRAINT doc_types_pkey PRIMARY KEY (id);


--
-- TOC entry 3213 (class 2606 OID 16479)
-- Name: fact_docs fact_docs_linkToFile_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.fact_docs
    ADD CONSTRAINT "fact_docs_linkToFile_key" UNIQUE ("linkToFile");


--
-- TOC entry 3215 (class 2606 OID 16477)
-- Name: fact_docs fact_docs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.fact_docs
    ADD CONSTRAINT fact_docs_pkey PRIMARY KEY (id);


--
-- TOC entry 3203 (class 2606 OID 16430)
-- Name: jobs jobs_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.jobs
    ADD CONSTRAINT jobs_name_key UNIQUE (title);


--
-- TOC entry 3205 (class 2606 OID 16425)
-- Name: jobs jobs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.jobs
    ADD CONSTRAINT jobs_pkey PRIMARY KEY (id);


--
-- TOC entry 3217 (class 2606 OID 16573)
-- Name: periodicity periodicity_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.periodicity
    ADD CONSTRAINT periodicity_pkey PRIMARY KEY (id);


--
-- TOC entry 3219 (class 2606 OID 16575)
-- Name: periodicity periodicity_title_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.periodicity
    ADD CONSTRAINT periodicity_title_key UNIQUE (title);


--
-- TOC entry 3209 (class 2606 OID 16544)
-- Name: schedule schedule_docType_jobOfResponsible_dateToPass_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.schedule
    ADD CONSTRAINT "schedule_docType_jobOfResponsible_dateToPass_key" UNIQUE ("docType", "jobOfResponsible", period);


--
-- TOC entry 3211 (class 2606 OID 16449)
-- Name: schedule schedule_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.schedule
    ADD CONSTRAINT schedule_pkey PRIMARY KEY (id);


--
-- TOC entry 3207 (class 2606 OID 16438)
-- Name: workers workers_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workers
    ADD CONSTRAINT workers_pkey PRIMARY KEY (id);


--
-- TOC entry 3224 (class 2606 OID 16485)
-- Name: fact_docs fact_docs_reason_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.fact_docs
    ADD CONSTRAINT fact_docs_reason_fkey FOREIGN KEY (reason) REFERENCES public.schedule(id) ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 3223 (class 2606 OID 16480)
-- Name: fact_docs fact_docs_worker_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.fact_docs
    ADD CONSTRAINT fact_docs_worker_fkey FOREIGN KEY (worker) REFERENCES public.workers(id) ON UPDATE CASCADE ON DELETE RESTRICT;


--
-- TOC entry 3221 (class 2606 OID 16460)
-- Name: schedule schedule_docType_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.schedule
    ADD CONSTRAINT "schedule_docType_fkey" FOREIGN KEY ("docType") REFERENCES public.doc_types(id) ON UPDATE CASCADE ON DELETE RESTRICT NOT VALID;


--
-- TOC entry 3222 (class 2606 OID 16465)
-- Name: schedule schedule_jobOfResponsible_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.schedule
    ADD CONSTRAINT "schedule_jobOfResponsible_fkey" FOREIGN KEY ("jobOfResponsible") REFERENCES public.jobs(id) ON UPDATE CASCADE ON DELETE RESTRICT NOT VALID;


--
-- TOC entry 3220 (class 2606 OID 16439)
-- Name: workers workers_job_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.workers
    ADD CONSTRAINT workers_job_fkey FOREIGN KEY (job) REFERENCES public.jobs(id) ON UPDATE CASCADE ON DELETE SET NULL;


-- Completed on 2022-10-20 18:18:00

--
-- PostgreSQL database dump complete
--

